/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TexaPoker;

import java.util.Arrays;

public class Poker {

    public static void main(String[] args) {

        Poker black = new Poker();
        Poker white = new Poker();
        Judge judge = new Judge();
        Compare compare = new Compare();
        String str = "Black: 2D 2H 4S 6C 6S White: 6S 4C 2H 6S 2D";
        black.getBlackNumAndProcess(black, str);
        white.getWhiteNumAndProcess(white, str);
        black.getBlackColors(black, str);
        white.getWhiteColors(white, str);
        System.out.println(judge.judgeType(black, str));
        System.out.println(judge.judgeType(white, str));
        System.out.println(Arrays.toString(black.comparePoint));
        System.out.println(Arrays.toString(white.comparePoint));
        System.out.println(compare.isCompareCardSize(black, white));
    }

    int[] num = new int [5];
    char[] col = new char [5];
    int level = 0;
    int[] comparePoint = {0, 0, 0, 0, 0};


    public int[] getBlackNumAndProcess(Poker black, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            if (in[7 + 3 * i] == 84)//T
                black.num[i] = 10;
            else if (in[7 + 3 * i] == 74)//J
                black.num[i] = 11;
            else if (in[7 + 3 * i] == 81)//Q
                black.num[i] = 12;
            else if (in[7 + 3 * i] == 75)//K
                black.num[i] = 13;
            else if (in[7 + 3 * i] == 65)//A
                black.num[i] = 14;
            else
                black.num[i] = in[7 + 3 * i] - 48;
        }
        Arrays.sort(black.num);
        System.out.println(Arrays.toString(black.num));
        return black.num;
    }

    public int[] getWhiteNumAndProcess(Poker white, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            if (in[29 + 3 * i] == 84)//T
                white.num[i] = 10;
            else if (in[29 + 3 * i] == 74)//J
                white.num[i] = 11;
            else if (in[29 + 3 * i] == 81)//Q
                white.num[i] = 12;
            else if (in[29 + 3 * i] == 75)//K
                white.num[i] = 13;
            else if (in[29 + 3 * i] == 65)//A
                white.num[i] = 14;
            else
                white.num[i] = in[29 + 3 * i] - 48;
        }
        Arrays.sort(white.num);
        System.out.println(Arrays.toString(white.num));
        return white.num;
    }

    public char[] getBlackColors(Poker black, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            black.col[i] = in[8 + 3 * i];
        }
        System.out.println(black.col);
        return black.col;
    }

    public char[] getWhiteColors(Poker white, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            white.col[i] = in[30 + 3 * i];
        }
        System.out.println(white.col);
        return white.col;
    }
}
