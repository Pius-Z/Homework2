/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TexaPoker;

import java.util.Arrays;

public class Poker {

    public static void main(String[] args) {

        Poker test = new Poker();
        String str = "Black: 2H 3D 5S 9C KD White: 2C 3H 4S 8C AH";
        test.getBlackNumAndProcess(test, str);
        test.getWhiteNumAndProcess(test, str);
        test.getBlackColors(test, str);
        test.getWhiteColors(test, str);
    }

    int[] Bnum = new int [5];
    int[] Wnum = new int [5];
    char[] Bcol = new char [5];
    char[] Wcol = new char [5];
    int Blevel = 0;
    int Wlevel = 0;
    int[] BComparePoint = new int [5];
    int[] WComparePoint = new int [5];


    public int[] getBlackNumAndProcess(Poker poker, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            if (in[7 + 3 * i] == 84)//T
                poker.Bnum[i] = 10;
            else if (in[7 + 3 * i] == 74)//J
                poker.Bnum[i] = 11;
            else if (in[7 + 3 * i] == 81)//Q
                poker.Bnum[i] = 12;
            else if (in[7 + 3 * i] == 75)//K
                poker.Bnum[i] = 13;
            else if (in[7 + 3 * i] == 65)//A
                poker.Bnum[i] = 14;
            else
                poker.Bnum[i] = in[7 + 3 * i] - 48;
        }
        Arrays.sort(poker.Bnum);
        System.out.println(Arrays.toString(poker.Bnum));
        return poker.Bnum;
    }

    public int[] getWhiteNumAndProcess(Poker poker, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            if (in[29 + 3 * i] == 84)//T
                poker.Wnum[i] = 10;
            else if (in[29 + 3 * i] == 74)//J
                poker.Wnum[i] = 11;
            else if (in[29 + 3 * i] == 81)//Q
                poker.Wnum[i] = 12;
            else if (in[29 + 3 * i] == 75)//K
                poker.Wnum[i] = 13;
            else if (in[29 + 3 * i] == 65)//A
                poker.Wnum[i] = 14;
            else
                poker.Wnum[i] = in[29 + 3 * i] - 48;
        }
        Arrays.sort(poker.Wnum);
        System.out.println(Arrays.toString(poker.Wnum));
        return poker.Wnum;
    }

    public char[] getBlackColors(Poker poker, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            poker.Bcol[i] = in[8 + 3 * i];
        }
        System.out.println(poker.Bcol);
        return poker.Bcol;
    }

    public char[] getWhiteColors(Poker poker, String str) {
        char[] in;
        in = str.toCharArray();
        for (int i=0; i<5; i++) {
            poker.Wcol[i] = in[30 + 3 * i];
        }
        System.out.println(poker.Wcol);
        return poker.Wcol;
    }
}
